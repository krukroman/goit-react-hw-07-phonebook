{"version":3,"sources":["components/ContactsList/ContactsList.module.scss","components/ContactsFilter/ContactsFilter.module.scss","components/Header/Header.module.scss","components/Logo/Logo.module.scss","components/UserInfo/UserInfo.module.scss","components/Button/Button.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","redux/store.js","components/Logo/Logo.js","components/ContactsFilter/ContactsFilter.js","components/UserInfo/UserInfo.js","components/Button/Button.js","components/Header/Header.js","components/ContactsEditor/ContactsEditor.js","functions/isContactExists.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","pages/ContactsPage.js","App.js","index.js","components/ContactsEditor/ContactsEditor.module.scss","components/Contact/Contact.module.scss"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","name","number","contact","post","deleteContact","contactId","delete","items","createReducer","fulfilled","payload","state","filter","id","error","rejected","pending","combineReducers","getContacts","contacts","getFilter","contactsSelectors","getError","getVisibleContacts","createSelector","normalizedFilter","toLocaleLowerCase","sort","b","localeCompare","includes","store","configureStore","reducer","contactsReducer","devTools","process","Logo","text","className","s","logo_wrapper","logo","Filter","useSelector","value","dispatch","useDispatch","wrapper","container","icon_search","input","type","autoComplete","autoFocus","onChange","e","contactsActions","target","placeholder","length","UserInfo","mail","user_mail","Button","btn","disabled","Header","header","info_wrapper","ContactsEditor","useState","setName","setNumber","inputNameId","nanoid","inputNumberId","handleChange","form","onSubmit","preventDefault","normalizeedName","find","isContactExist","addContactError","message","stack","contactsOperations","label","htmlFor","pattern","title","required","Contact","item","info","onClick","onDeleteContact","ContactsList","section","list","map","status","ContactsPage","useEffect","alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50220ce6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactsList_section__twp9B\",\"container\":\"ContactsList_container__1XP4c\",\"title\":\"ContactsList_title__1TbEr\",\"list\":\"ContactsList_list__3tFEU\",\"status\":\"ContactsList_status__pWO2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsFilter_wrapper__1J6W6\",\"container\":\"ContactsFilter_container__1D9u3\",\"icon_search\":\"ContactsFilter_icon_search__2ktLd\",\"input\":\"ContactsFilter_input__Dz1kj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__vCrY2\",\"container\":\"Header_container__e4SXC\",\"info_wrapper\":\"Header_info_wrapper__3x8l6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo_wrapper\":\"Logo_logo_wrapper__1lOyu\",\"logo\":\"Logo_logo__35xx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_mail\":\"UserInfo_user_mail__W-DVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__US6kt\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://6187e890057b9b00177f9b0c.mockapi.io/api/v1';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, { rejectWithValue }) => {\n    const contact = {\n      name,\n      number,\n    };\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${contactId}`);\n      return contactId;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\nimport { changeFilter } from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [addContact.rejected]: (_, { payload }) => payload,\n  [deleteContact.rejected]: (_, { payload }) => payload,\n  [fetchContacts.pending]: () => null,\n  [addContact.pending]: () => null,\n  [deleteContact.pending]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  error,\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst getError = state => state.contacts.error;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return [...contacts]\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .filter(contact =>\n        contact.name.toLocaleLowerCase().includes(normalizedFilter),\n      );\n  },\n);\n\nconst contactsSelectors = {\n  getContacts,\n  getFilter,\n  getError,\n  getVisibleContacts,\n};\n\nexport default contactsSelectors;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contacts';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import PropTypes from 'prop-types';\nimport s from './Logo.module.scss';\n\nexport default function Logo({ text }) {\n  return (\n    <div className={s.logo_wrapper}>\n      <p className={s.logo}>{text}</p>\n    </div>\n  );\n}\n\nLogo.propTypes = {\n  text: PropTypes.string,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from 'redux/contacts';\nimport s from './ContactsFilter.module.scss';\nexport default function Filter() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.wrapper}>\n      <div className={s.container}>\n        <span className={`material-icons-outlined ${s.icon_search}`}>\n          search\n        </span>\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          autoComplete=\"off\"\n          autoFocus\n          onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n          placeholder={`Contacts: ${contacts.length}`}\n        />\n      </div>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './UserInfo.module.scss';\n\nexport default function UserInfo({ mail }) {\n  return <p className={s.user_mail}>{mail}</p>;\n}\n\nUserInfo.propTypes = {\n  mail: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.scss';\n\nexport default function Button({ text }) {\n  return (\n    <button\n      type=\"button\"\n      className={s.btn}\n      disabled={true}\n      aria-label=\"for future login btn\"\n    >\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n};\n","import Logo from 'components/Logo';\nimport ContactsFilter from 'components/ContactsFilter';\nimport UserInfo from 'components/UserInfo';\nimport Button from 'components/Button';\nimport s from './Header.module.scss';\n\nexport default function Header() {\n  return (\n    <header className={s.header}>\n      <div className={s.container}>\n        <Logo text=\"Phonebook\" />\n        <ContactsFilter />\n        <div className={s.info_wrapper}>\n          <UserInfo mail=\"user@mail.com\" />\n          <Button text=\"Exit\" />\n        </div>\n      </div>\n    </header>\n  );\n}\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport {\n  contactsActions,\n  contactsSelectors,\n  contactsOperations,\n} from 'redux/contacts';\n\nimport isContactExist from 'functions/isContactExists';\n\nimport s from './ContactsEditor.module.scss';\n\nexport default function ContactsEditor() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const inputNameId = nanoid();\n  const inputNumberId = nanoid();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isContactExist(contacts, name)) {\n      dispatch(\n        contactsActions.addContactError({\n          message: 'Contact exists',\n          stack: `Contact with name ${name} allready exists`,\n        }),\n      );\n      setName('');\n      setNumber('');\n      return;\n    }\n\n    dispatch(\n      contactsOperations.addContact({\n        name,\n        number,\n      }),\n    );\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.container}>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label} htmlFor={inputNameId}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            value={name}\n            id={inputNameId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label} htmlFor={inputNumberId}>\n          Phone number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            onChange={handleChange}\n            value={number}\n            id={inputNumberId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","export default function isContactExist(contacts, name) {\n  const normalizeedName = name.toLocaleLowerCase();\n  return contacts.find(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizeedName),\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport PropTypes from 'prop-types';\nimport s from './Contact.module.scss';\nexport default function Contact({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <li className={s.item}>\n      <div className={s.container}>\n        <div className={s.info}>\n          <p className={s.name}>{name}</p>\n          <p className={s.number}>{number}</p>\n        </div>\n        <button\n          className={s.btn}\n          type=\"button\"\n          onClick={() => onDeleteContact(id)}\n        >\n          <span className=\"material-icons-outlined\">\n            <span className=\"material-icons-outlined\">delete</span>\n          </span>\n        </button>\n      </div>\n    </li>\n  );\n}\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\n\nimport Contact from '../Contact';\n\nimport s from './ContactsList.module.scss';\n\nexport default function ContactsList() {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  return (\n    <section className={s.section}>\n      <div className={s.container}>\n        <h2 className={s.title}>Contacts</h2>\n        {contacts.length !== 0 ? (\n          <ul className={s.list}>\n            {contacts.map(({ id, name, number }) => {\n              return <Contact key={id} id={id} name={name} number={number} />;\n            })}\n          </ul>\n        ) : (\n          <p className={s.status}>\n            Contacts list is empty, or filtered name doesn`t exists. Please add\n            contact, or type correct query in filter\n          </p>\n        )}\n      </div>\n    </section>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nimport Header from 'components/Header';\nimport ContactsEditor from 'components/ContactsEditor';\nimport ContactsList from 'components/ContactsList';\n\nexport default function ContactsPage() {\n  const error = useSelector(contactsSelectors.getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    error && alert(`Error: ${error.message}, Error message: ${error.stack}`);\n  }, [error]);\n\n  return (\n    <>\n      <Header />\n      <ContactsEditor />\n      <ContactsList />\n    </>\n  );\n}\n","import ContactsPage from 'pages/ContactsPage';\n\nexport default function App() {\n  return <ContactsPage />;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\nimport './index.scss';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsEditor_container__3RLRk\",\"form\":\"ContactsEditor_form__Eo38A\",\"label\":\"ContactsEditor_label__2IGds\",\"input\":\"ContactsEditor_input__3h9r9\",\"btn\":\"ContactsEditor_btn__r-uJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contact_container__283F5\",\"item\":\"Contact_item__2aeQm\",\"name\":\"Contact_name__2zX9z\",\"number\":\"Contact_number__3JALq\",\"btn\":\"Contact_btn__2-iAl\"};"],"sourceRoot":""}