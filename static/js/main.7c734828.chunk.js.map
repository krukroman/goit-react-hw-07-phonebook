{"version":3,"sources":["components/ContactsFilter/ContactsFilter.module.scss","components/Header/Header.module.scss","components/Logo/Logo.module.scss","components/UserInfo/UserInfo.module.scss","components/Button/Button.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","redux/store.js","components/Logo/Logo.js","components/ContactsFilter/ContactsFilter.js","components/UserInfo/UserInfo.js","components/Button/Button.js","components/Header/Header.js","components/ContactsEditor/ContactsEditor.js","functions/isContactExists.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","App.js","index.js","components/ContactsEditor/ContactsEditor.module.scss","components/Contact/Contact.module.scss","components/ContactsList/ContactsList.module.scss"],"names":["module","exports","contactsActions","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","error","combineReducers","getContacts","contacts","getFilter","contactsSelectors","getError","getVisibleContacts","createSelector","normalizedFilter","toLocaleLowerCase","sort","a","b","name","localeCompare","contact","includes","axios","defaults","baseURL","contactsOperations","fetchContacts","dispatch","get","then","data","catch","addContact","number","post","deleteContact","contactId","delete","store","configureStore","reducer","contactsReducer","devTools","process","Logo","text","className","s","logo_wrapper","logo","Filter","useSelector","value","useDispatch","wrapper","container","icon_search","input","type","autoComplete","autoFocus","onChange","e","target","placeholder","length","UserInfo","mail","user_mail","Button","btn","disabled","Header","header","info_wrapper","ContactsEditor","useState","setName","setNumber","inputNameId","nanoid","inputNumberId","handleChange","form","onSubmit","preventDefault","normalizeedName","find","isContactExist","message","stack","label","htmlFor","pattern","title","required","Contact","onDelete","item","info","onClick","ContactsList","section","list","map","onDeleteContact","status","App","useEffect","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c734828.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsFilter_wrapper__1J6W6\",\"container\":\"ContactsFilter_container__1D9u3\",\"icon_search\":\"ContactsFilter_icon_search__2ktLd\",\"input\":\"ContactsFilter_input__Dz1kj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__vCrY2\",\"container\":\"Header_container__e4SXC\",\"info_wrapper\":\"Header_info_wrapper__3x8l6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo_wrapper\":\"Logo_logo_wrapper__1lOyu\",\"logo\":\"Logo_logo__35xx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_mail\":\"UserInfo_user_mail__W-DVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__US6kt\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst contactsActions = {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n\nexport default contactsActions;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { contactsActions } from 'redux/contacts';\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [contactsActions.addContactSuccess]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [contactsActions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [contactsActions.fetchContactsError]: (_, { payload }) => payload,\n  [contactsActions.addContactError]: (_, { payload }) => payload,\n  [contactsActions.deleteContactError]: (_, { payload }) => payload,\n  [contactsActions.fetchContactsRequest]: () => null,\n  [contactsActions.addContactRequest]: () => null,\n  [contactsActions.deleteContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  error,\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst getError = state => state.contacts.error;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return [...contacts]\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .filter(contact =>\n        contact.name.toLocaleLowerCase().includes(normalizedFilter),\n      );\n  },\n);\n\nconst contactsSelectors = {\n  getContacts,\n  getFilter,\n  getError,\n  getVisibleContacts,\n};\n\nexport default contactsSelectors;\n","import axios from 'axios';\nimport { contactsActions } from 'redux/contacts';\n\naxios.defaults.baseURL = 'https://6187e890057b9b00177f9b0c.mockapi.io/api/v1/';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(contactsActions.fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => {\n      dispatch(contactsActions.fetchContactsSuccess(data));\n    })\n    .catch(error => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(contactsActions.addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => {\n      dispatch(contactsActions.addContactSuccess(data));\n    })\n    .catch(error => dispatch(contactsActions.addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(contactsActions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => {\n      dispatch(contactsActions.deleteContactSuccess(contactId));\n    })\n    .catch(error => dispatch(contactsActions.deleteContactError(error)));\n};\n\nconst contactsOperations = { fetchContacts, addContact, deleteContact };\nexport default contactsOperations;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contacts';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import PropTypes from 'prop-types';\nimport s from './Logo.module.scss';\n\nexport default function Logo({ text }) {\n  return (\n    <div className={s.logo_wrapper}>\n      <p className={s.logo}>{text}</p>\n    </div>\n  );\n}\n\nLogo.propTypes = {\n  text: PropTypes.string,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from 'redux/contacts';\nimport s from './ContactsFilter.module.scss';\nexport default function Filter() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.wrapper}>\n      <div className={s.container}>\n        <span className={`material-icons-outlined ${s.icon_search}`}>\n          search\n        </span>\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          autoComplete=\"off\"\n          autoFocus\n          onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n          placeholder={`Contacts: ${contacts.length}`}\n        />\n      </div>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './UserInfo.module.scss';\n\nexport default function UserInfo({ mail }) {\n  return <p className={s.user_mail}>{mail}</p>;\n}\n\nUserInfo.propTypes = {\n  mail: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.scss';\n\nexport default function Button({ text }) {\n  return (\n    <button\n      type=\"button\"\n      className={s.btn}\n      disabled={true}\n      aria-label=\"for future login btn\"\n    >\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n};\n","import Logo from 'components/Logo';\nimport ContactsFilter from 'components/ContactsFilter';\nimport UserInfo from 'components/UserInfo';\nimport Button from 'components/Button';\nimport s from './Header.module.scss';\n\nexport default function Header() {\n  return (\n    <header className={s.header}>\n      <div className={s.container}>\n        <Logo text=\"Phonebook\" />\n        <ContactsFilter />\n        <div className={s.info_wrapper}>\n          <UserInfo mail=\"user@mail.com\" />\n          <Button text=\"Exit\" />\n        </div>\n      </div>\n    </header>\n  );\n}\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport {\n  contactsActions,\n  contactsOperations,\n  contactsSelectors,\n} from 'redux/contacts';\nimport isContactExist from 'functions/isContactExists';\n\nimport s from './ContactsEditor.module.scss';\n\nexport default function ContactsEditor() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const inputNameId = nanoid();\n  const inputNumberId = nanoid();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isContactExist(contacts, name)) {\n      dispatch(\n        contactsActions.addContactError({\n          message: 'Contact exists',\n          stack: `Contact with name ${name} allready exists`,\n        }),\n      );\n      setName('');\n      setNumber('');\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(name, number));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.container}>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label} htmlFor={inputNameId}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            value={name}\n            id={inputNameId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label} htmlFor={inputNumberId}>\n          Phone number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            onChange={handleChange}\n            value={number}\n            id={inputNumberId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","export default function isContactExist(contacts, name) {\n  const normalizeedName = name.toLocaleLowerCase();\n  return contacts.find(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizeedName),\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.scss';\nexport default function Contact({ name, number, onDelete }) {\n  return (\n    <li className={s.item}>\n      <div className={s.container}>\n        <div className={s.info}>\n          <p className={s.name}>{name}</p>\n          <p className={s.number}>{number}</p>\n        </div>\n        <button className={s.btn} type=\"button\" onClick={onDelete}>\n          <span className=\"material-icons-outlined\">\n            <span className=\"material-icons-outlined\">delete</span>\n          </span>\n        </button>\n      </div>\n    </li>\n  );\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nimport Contact from '../Contact';\n\nimport s from './ContactsList.module.scss';\n\nexport default function ContactsList() {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <section className={s.section}>\n      <div className={s.container}>\n        <h2 className={s.title}>Contacts</h2>\n        {contacts.length !== 0 ? (\n          <ul className={s.list}>\n            {contacts.map(({ id, name, number }) => {\n              return (\n                <Contact\n                  key={id}\n                  name={name}\n                  number={number}\n                  onDelete={() => onDeleteContact(id)}\n                />\n              );\n            })}\n          </ul>\n        ) : (\n          <p className={s.status}>\n            Contacts list is empty, or filtered name doesn`t exists. Please add\n            contact, or type correct query in filter\n          </p>\n        )}\n      </div>\n    </section>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nimport Header from 'components/Header';\nimport ContactsEditor from 'components/ContactsEditor';\nimport ContactsList from 'components/ContactsList';\n\nexport default function App() {\n  const error = useSelector(contactsSelectors.getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    error && alert(`Error: ${error.message}, Error message: ${error.stack}`);\n  }, [error]);\n\n  return (\n    <>\n      <Header />\n      <ContactsEditor />\n      <ContactsList />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\nimport './index.scss';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsEditor_container__3RLRk\",\"form\":\"ContactsEditor_form__Eo38A\",\"label\":\"ContactsEditor_label__2IGds\",\"input\":\"ContactsEditor_input__3h9r9\",\"btn\":\"ContactsEditor_btn__r-uJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contact_container__283F5\",\"item\":\"Contact_item__2aeQm\",\"name\":\"Contact_name__2zX9z\",\"number\":\"Contact_number__3JALq\",\"btn\":\"Contact_btn__2-iAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactsList_section__twp9B\",\"container\":\"ContactsList_container__1XP4c\",\"title\":\"ContactsList_title__1TbEr\",\"list\":\"ContactsList_list__3tFEU\",\"status\":\"ContactsList_status__pWO2o\"};"],"sourceRoot":""}