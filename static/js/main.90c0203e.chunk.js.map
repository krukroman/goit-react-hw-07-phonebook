{"version":3,"sources":["components/ContactsList/ContactsList.module.scss","components/ContactsFilter/ContactsFilter.module.scss","components/Header/Header.module.scss","components/Logo/Logo.module.scss","components/UserInfo/UserInfo.module.scss","components/Button/Button.module.scss","redux/contacts/contactsApi.js","redux/contacts/contacts-actions.js","redux/contacts/ContactsFilter-reducer.js","redux/contacts/contacts-selectors.js","redux/store.js","components/Logo/Logo.js","components/ContactsFilter/ContactsFilter.js","components/UserInfo/UserInfo.js","components/Button/Button.js","components/Header/Header.js","components/ContactsEditor/ContactsEditor.js","functions/isContactExists.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","pages/ContactsPage.js","App.js","index.js","components/Contact/Contact.module.scss","components/ContactsEditor/ContactsEditor.module.scss"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","addContact","mutation","url","method","body","name","number","invalidatesTags","deleteContact","contactId","useFetchContactsQuery","useAddContactMutation","useDeleteContactMutation","changeFilter","createAction","filter","createReducer","_","payload","getFilter","state","store","configureStore","reducer","filterReducer","middleware","getDefaultMiddleware","concat","devTools","process","setupListeners","dispatch","Logo","text","className","s","logo_wrapper","logo","Filter","contactsCount","value","useSelector","contactsSelectors","useDispatch","wrapper","container","icon_search","input","type","autoComplete","autoFocus","onChange","e","preventDefault","target","contactsActions","placeholder","UserInfo","mail","user_mail","Button","btn","disabled","Header","header","info_wrapper","ContactsEditor","contacts","useState","setName","setNumber","inputNameId","nanoid","inputNumberId","handleChange","form","onSubmit","normalizeedName","toLocaleLowerCase","find","contact","includes","isContactExist","alert","label","htmlFor","id","pattern","title","required","Contact","isDeleting","isLoading","item","info","btn_wrapper","btn_edit","btn_delete","onClick","ContactsList","isDataRecived","length","section","list","map","status","ContactsPage","data","filterValue","sort","a","b","localeCompare","getVisibleContacts","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90c0203e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactsList_section__twp9B\",\"container\":\"ContactsList_container__1XP4c\",\"title\":\"ContactsList_title__1TbEr\",\"list\":\"ContactsList_list__3tFEU\",\"status\":\"ContactsList_status__pWO2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsFilter_wrapper__1J6W6\",\"container\":\"ContactsFilter_container__1D9u3\",\"icon_search\":\"ContactsFilter_icon_search__2ktLd\",\"input\":\"ContactsFilter_input__Dz1kj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__vCrY2\",\"container\":\"Header_container__e4SXC\",\"info_wrapper\":\"Header_info_wrapper__3x8l6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo_wrapper\":\"Logo_logo_wrapper__1lOyu\",\"logo\":\"Logo_logo__35xx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_mail\":\"UserInfo_user_mail__W-DVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__US6kt\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://6187e890057b9b00177f9b0c.mockapi.io/api/v1',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contact'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: ({ name, number }) => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: { name, number },\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = contactsApi;\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './contacts-actions';\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default filter;\r\n","export const getFilter = state => state.filter;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport { contactsApi } from './contacts/contactsApi';\r\nimport { filterReducer } from './contacts';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter: filterReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware().concat(contactsApi.middleware),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import PropTypes from 'prop-types';\nimport s from './Logo.module.scss';\n\nexport default function Logo({ text }) {\n  return (\n    <div className={s.logo_wrapper}>\n      <p className={s.logo}>{text}</p>\n    </div>\n  );\n}\n\nLogo.propTypes = {\n  text: PropTypes.string,\n};\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsActions, contactsSelectors } from 'redux/contacts';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactsFilter.module.scss';\r\n\r\nexport default function Filter({ contactsCount }) {\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    const { value } = e.target;\r\n    dispatch(contactsActions.changeFilter(value));\r\n  };\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.container}>\r\n        <span className={`material-icons-outlined ${s.icon_search}`}>\r\n          search\r\n        </span>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          onChange={handleChange}\r\n          placeholder={`Contacts: ${contactsCount}`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  contactsCount: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\nimport s from './UserInfo.module.scss';\n\nexport default function UserInfo({ mail }) {\n  return <p className={s.user_mail}>{mail}</p>;\n}\n\nUserInfo.propTypes = {\n  mail: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.scss';\n\nexport default function Button({ text }) {\n  return (\n    <button\n      type=\"button\"\n      className={s.btn}\n      disabled={true}\n      aria-label=\"for future login btn\"\n    >\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n};\n","import Logo from 'components/Logo';\r\nimport ContactsFilter from 'components/ContactsFilter';\r\nimport UserInfo from 'components/UserInfo';\r\nimport Button from 'components/Button';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Header.module.scss';\r\n\r\nexport default function Header({ contactsCount }) {\r\n  return (\r\n    <header className={s.header}>\r\n      <div className={s.container}>\r\n        <Logo text=\"Phonebook\" />\r\n        <ContactsFilter contactsCount={contactsCount} />\r\n        <div className={s.info_wrapper}>\r\n          <UserInfo mail=\"user@mail.com\" />\r\n          <Button text=\"Exit\" />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  contactsCount: PropTypes.number.isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { contactsApi } from 'redux/contacts';\r\nimport isContactExist from 'functions/isContactExists';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactsEditor.module.scss';\r\n\r\nexport default function ContactsEditor({ contacts }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [addContact] = contactsApi.useAddContactMutation();\r\n\r\n  const inputNameId = nanoid();\r\n  const inputNumberId = nanoid();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (isContactExist(contacts, name)) {\r\n      alert(`Contact with name ${name} allready exist`);\r\n      setName('');\r\n      setNumber('');\r\n      return;\r\n    }\r\n    addContact({\r\n      name,\r\n      number,\r\n    });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label className={s.label} htmlFor={inputNameId}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            value={name}\r\n            id={inputNameId}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label} htmlFor={inputNumberId}>\r\n          Phone number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            value={number}\r\n            id={inputNumberId}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactsEditor.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }).isRequired,\r\n  ),\r\n};\r\n","export default function isContactExist(contacts, name) {\n  const normalizeedName = name.toLocaleLowerCase();\n  return contacts.find(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizeedName),\n  );\n}\n","import { contactsApi } from 'redux/contacts';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.scss';\r\nexport default function Contact({ id, name, number }) {\r\n  const [deleteContact, { isLoading: isDeleting }] =\r\n    contactsApi.useDeleteContactMutation();\r\n\r\n  return (\r\n    <li className={s.item}>\r\n      <div className={s.container}>\r\n        <div className={s.info}>\r\n          <p className={s.name}>{name}</p>\r\n          <p className={s.number}>{number}</p>\r\n        </div>\r\n        <div className={s.btn_wrapper}>\r\n          <button\r\n            className={`${s.btn}, ${s.btn_edit}`}\r\n            type=\"button\"\r\n            disabled=\"disabled\"\r\n          >\r\n            <span className=\"material-icons-outlined\">edit</span>\r\n          </button>\r\n          <button\r\n            className={`${s.btn}, ${s.btn_delete}`}\r\n            type=\"button\"\r\n            onClick={() => deleteContact(id)}\r\n            disabled={isDeleting}\r\n          >\r\n            <span className=\"material-icons-outlined\">delete</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import Contact from '../Contact';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactsList.module.scss';\r\n\r\nexport default function ContactsList({ contacts }) {\r\n  const isDataRecived = contacts && contacts.length > 0;\r\n  return (\r\n    <section className={s.section}>\r\n      <div className={s.container}>\r\n        <h2 className={s.title}>Contacts</h2>\r\n        {isDataRecived ? (\r\n          <ul className={s.list}>\r\n            {contacts.map(({ id, name, number }) => {\r\n              return <Contact key={id} id={id} name={name} number={number} />;\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <p className={s.status}>\r\n            Contacts list is empty, or filtered name doesn`t exists. Please add\r\n            contact, or type correct query in filter\r\n          </p>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }).isRequired,\r\n  ),\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport Header from 'components/Header';\r\nimport ContactsEditor from 'components/ContactsEditor';\r\nimport ContactsList from 'components/ContactsList';\r\nimport { contactsApi, contactsSelectors } from 'redux/contacts';\r\n\r\nexport default function ContactsPage() {\r\n  const { data: contacts } = contactsApi.useFetchContactsQuery();\r\n  const filterValue = useSelector(\r\n    contactsSelectors.getFilter,\r\n  ).toLocaleLowerCase();\r\n\r\n  const getVisibleContacts = (contacts, filterValue) => {\r\n    return [...contacts]\r\n      .sort((a, b) => a.name.localeCompare(b.name))\r\n      .filter(contact =>\r\n        contact.name.toLocaleLowerCase().includes(filterValue),\r\n      );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header contactsCount={contacts ? contacts.length : 0} />\r\n      <ContactsEditor contacts={contacts} />\r\n      {contacts && (\r\n        <ContactsList contacts={getVisibleContacts(contacts, filterValue)} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import ContactsPage from 'pages/ContactsPage';\n\nexport default function App() {\n  return <ContactsPage />;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\nimport './index.scss';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contact_container__283F5\",\"item\":\"Contact_item__2aeQm\",\"name\":\"Contact_name__2zX9z\",\"number\":\"Contact_number__3JALq\",\"btn_wrapper\":\"Contact_btn_wrapper__2aj6E\",\"btn\":\"Contact_btn__2-iAl\",\"btn_edit\":\"Contact_btn_edit__ihkjX\",\"btn_delete\":\"Contact_btn_delete__35m__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsEditor_container__3RLRk\",\"form\":\"ContactsEditor_form__Eo38A\",\"label\":\"ContactsEditor_label__2IGds\",\"input\":\"ContactsEditor_input__3h9r9\",\"btn\":\"ContactsEditor_btn__r-uJN\"};"],"sourceRoot":""}